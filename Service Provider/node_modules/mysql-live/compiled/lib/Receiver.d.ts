import { default as Handler, onAcknowledgementType } from "./Handler";
export default class Receiver {
    handler: Handler;
    private events;
    constructor(handler: Handler);
    private listen();
    private capitalizeFirstLetter(str);
    private bindEventsTo(socket);
    onDisconnect(socket: SocketIO.Socket): void;
    onRequestSessionId(socket: SocketIO.Socket, cb: onAcknowledgementType): void;
    onSetPassport(socket: SocketIO.Socket, encryptedPassportObj: any, cb?: onAcknowledgementType): void;
    onSubscribe(socket: SocketIO.Socket, publicationName: string, args: any[], callbackClient: onAcknowledgementType): void;
    onUnsubscribe(socket: SocketIO.Socket, subscriptionName: string): void;
    onRequestRefresh(socket: SocketIO.Socket, collectionName: string, cb?: onAcknowledgementType): void;
    onRequestSaveObject(socket: SocketIO.Socket, evt: any, cb?: onAcknowledgementType): void;
    onRequestRemoveObject(socket: SocketIO.Socket, evt: any, cb?: onAcknowledgementType): void;
    onMethodCall(socket: SocketIO.Socket, methodName: string, args: any[], cb?: onAcknowledgementType): void;
}
